name: "Build Wheels"

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Build Target Branch/Tag (e.g., master, v10, v10.5.0)'
        required: true
      release:
        description: 'Release Name to Upload (e.g., v10.5.0)'
        required: true
      matrix_cuda_linux_aarch64:
        description: 'Matrix: CUDA (Linux/aarch64)'
        required: true
        #default: '["10.2-jetson", "11.6-aarch64"]'
        default: '["11.6-aarch64"]'
      matrix_rocm_linux_x64:
        description: 'Matrix: ROCm (Linux/x64)'
        required: true
        default: '["rocm-4.3", "rocm-5.0"]'
      matrix_python:
        description: 'Matrix: Python'
        required: true
        default: '["3.7", "3.8", "3.9", "3.10"]'

jobs:
  preflight:
    # Creates a source archive of cupy-release-tools and cupy repository.
    runs-on: ubuntu-latest
    steps:
    - name: Check Release Exists
      run: |
        echo TODO - ensure that the specified release already exists
    - name: Prepare Source
      run: |
        git clone https://github.com/cupy/cupy-release-tools.git
        pushd cupy-release-tools
            git checkout "${{ github.event.inputs.target }}"
            git clone --recursive https://github.com/cupy/cupy.git
            pushd cupy
                git checkout "${{ github.event.inputs.target }}"
            popd
        popd
        tar cjf source.tar.bz2 --exclude-vcs cupy-release-tools
    - name: Artifact (Source)
      uses: actions/upload-artifact@v2
      with:
        name: source
        path: source.tar.bz2

  cuda-linux-aarch64:
    # Builds on Arm64 node.
    # Note that verification is not supported as CUDA is unavailable.
    runs-on: [self-hosted, linux, arm64]
    needs: [preflight]
    strategy:
      matrix:
        cuda: ${{ fromJSON(github.event.inputs.matrix_cuda_linux_aarch64) }}
    steps:
    - name: Download Source
      uses: actions/download-artifact@v2
      with:
        name: source
    - name: Build & Upload
      run: |
        tar xf source.tar.bz2
        cd cupy-release-tools
        export CUPY_RELEASE_SKIP_VERIFY=1
        echo ${{ join(fromJSON(github.event.inputs.matrix_python), ' ') }} | xargs ./build.sh "${{ matrix.cuda }}"
        gh release --repo cupy/cupy upload "${{ github.event.inputs.release }}" *.whl

  rocm-linux-x64:
    # Builds on ROCm node.
    runs-on: [self-hosted, linux, x64, rocm]
    needs: [preflight]
    strategy:
      matrix:
        cuda: ${{ fromJSON(github.event.inputs.matrix_rocm_linux_x64) }}
    steps:
    - name: Download Source
      uses: actions/download-artifact@v2
      with:
        name: source
    - name: Build & Upload
      run: |
        tar xf source.tar.bz2
        cd cupy-release-tools
        echo ${{ join(fromJSON(github.event.inputs.matrix_python), ' ') }} | xargs ./build.sh "${{ matrix.cuda }}"
        gh release --repo cupy/cupy upload "${{ github.event.inputs.release }}" *.whl
