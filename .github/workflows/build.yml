name: "Build Wheels"

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Target Branch or Tag (e.g., `master`, `v10`, `v10.5.0`)'
        required: true
      release:
        description: 'Release Name to Upload (e.g., `v10.5.0`)'
      flexci_token:
        description: 'FlexCI Token: (1) Open https://ci.preferred.jp/x/signin (2) Open https://ci.preferred.jp/p/settings'
        required: true
      matrix_cuda_linux_x64:
        description: 'Matrix: CUDA (Linux/x64)'
        required: true
        default: '["11.6"]'
      matrix_cuda_windows_x64:
        description: 'Matrix: CUDA (Windows/x64)'
        required: true
        default: '["11.6"]'
      matrix_cuda_linux_aarch64:
        description: 'Matrix: CUDA (Linux/aarch64)'
        required: true
        #default: '["10.2-jetson", "11.6-aarch64"]'
        default: '["11.6-aarch64"]'
      matrix_rocm_linux_x64:
        description: 'Matrix: ROCm (Linux/x64)'
        required: true
        default: '["rocm-4.3", "rocm-5.0"]'
      matrix_python:
        description: 'Matrix: Python'
        required: true
        default: '["3.7", "3.8", "3.9", "3.10"]'

jobs:
  preflight:
    # Creates an source archive of cupy-release-tools and cupy repository for the target.
    runs-on: ubuntu-latest
    steps:
    - name: Check Release Exists
      run: |
        echo TODO - ensure that the specified release already exists
    - name: Prepare Source
      run: |
        git clone https://github.com/cupy/cupy-release-tools.git
        pushd cupy-release-tools
            git checkout "${{ github.event.inputs.target }}"
            git clone --recursive https://github.com/cupy/cupy.git
            pushd cupy
                git checkout "${{ github.event.inputs.target }}"
            popd
        popd
        tar cjf source.tar.bz2 cupy-release-tools
    - name: Upload Source
      uses: actions/upload-artifact@v2
      with:
        name: source
        path: source.tar.bz2

  sdist-and-cuda-x64:
    # Euqueues a build job on FlexCI and wait until it completes.
    # Targets: sdist, cuda-linux-x64, cuda-windows-x64
    runs-on: ubuntu-latest
    needs: [preflight]
    steps:
    - name: Download Source
      uses: actions/download-artifact@v2
      with:
        name: source
    - name: Build & Upload
      run: |
        echo TODO - Enqueue FlexCI job to build sdist and upload to GitHub Releases
        echo TODO - Wait until FlexCI job complete

  cuda-linux-aarch64:
    # Builds on Arm64 node.
    # Note that verification is not supported as CUDA is unavailable.
    runs-on: [self-hosted, linux, arm64]
    needs: [preflight]
    strategy:
      matrix:
        cuda: ${{ fromJSON(github.event.inputs.matrix_cuda_linux_aarch64) }}
    steps:
    - name: Download Source
      uses: actions/download-artifact@v2
      with:
        name: source
    - name: Build & Upload
      run: |
        tar xf source.tar.bz2
        cd cupy-release-tools
        export CUPY_RELEASE_SKIP_VERIFY=1
        ./build.sh "${{ matrix.cuda }}" "${{ matrix.python }}"
        echo TODO - Upload to github releases

  rocm-linux-x64:
    # Builds on ROCm node.
    runs-on: [self-hosted, linux, x64, rocm]
    needs: [preflight]
    strategy:
      matrix:
        cuda: ${{ fromJSON(github.event.inputs.matrix_rocm_linux_x64) }}
    steps:
    - name: Download Source
      uses: actions/download-artifact@v2
      with:
        name: source
    - name: Build & Upload
      run: |
        tar xf source.tar.bz2
        cd cupy-release-tools
        ./build.sh "${{ matrix.cuda }}" "${{ matrix.python }}"
        gh release --repo cupy/cupy upload "${{ github.event.inputs.release }}" cupy-*.whl

  postflight:
    # Verify that everything is ready.
    runs-on: ubuntu-latest
    needs: [sdist-and-cuda-x64, cuda-linux-aarch64, rocm-linux-x64]
    steps:
    - name: Verify
      run: |
        echo TODO - run verification tool
